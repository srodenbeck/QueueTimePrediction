import pandas as pdimport matplotlib.pyplot as pltimport numpy as npimport sqlalchemyimport config_filedef create_engine():    db_config = {        "dbname": "sacctdata",        "user": "postgres",        "password": config_file.postgres_password,        "host": "slurm-data-loadbalancer.reu-p4.anvilcloud.rcac.purdue.edu",        "port": "5432"    }        engine = sqlalchemy.create_engine(        f'postgresql+psycopg2://{db_config["user"]}:{db_config["password"]}@{db_config["host"]}:{db_config["port"]}/{db_config["dbname"]}')    return enginedef plot_best_fit(ax, x, y):    coeffs = np.polyfit(x, y, 1)    poly = np.poly1d(coeffs)    y_fit = poly(x)    ax.plot(x, y_fit, color='red', linestyle='--', label='Best Fit Line')    ax.legend()if __name__ == "__main__":    engine = create_engine()    df = pd.read_sql_query("SELECT job_id, eligible, jobs_running, cpus_running, memory_running, nodes_running, time_limit_running, planned FROM new_jobs_odd ORDER BY eligible", engine)        print(df.head())    print()        independent_vars = ['jobs_running', 'cpus_running', 'memory_running',                        'nodes_running', 'time_limit_running']    y = df['planned'].values    f, axs = plt.subplots(nrows=len(independent_vars), ncols=1, figsize=(10, 15))    print("Starting plots")    for i, name in enumerate(independent_vars):        print(f"Plotting {name} vs planned")        x = df[name].values        axs[i].scatter(x, y)        axs[i].set_title(f"{name} vs Planned Time (s)")        axs[i].set_xlabel(name)        axs[i].set_ylabel("Delay (s)")        plot_best_fit(axs[i], x, y)    plt.tight_layout()    plt.savefig("more_graphs.png")    plt.show()    print("Finished plots")                    